<html>
  <head>
    <title>Heatmaps</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

   <style>/* 
    * Always set the map height explicitly to define the size of the div element
    * that contains the map. 
    */
   #map {
     height: 100%;
   }
   
   /* 
    * Optional: Makes the sample page fill the window. 
    */
   html,
   body {
     height: 100%;
     margin: 0;
     padding: 0;
   }
   
   #floating-panel {
     position: absolute;
     top: 10px;
     left: 25%;
     z-index: 5;
     background-color: #fff;
     padding: 5px;
     border: 1px solid #999;
     text-align: center;
     font-family: "Roboto", "sans-serif";
     line-height: 30px;
     padding-left: 10px;
   }
   
   #floating-panel {
     background-color: #fff;
     border: 1px solid #999;
     left: 25%;
     padding: 5px;
     position: absolute;
     top: 10px;
     z-index: 5;
   }</style>
    <script>
      // This example requires the Visualization library. Include the libraries=visualization
// parameter when you first load the API. For example:
// <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=visualization">
let map, heatmap;

function initMap() {
  map = new google.maps.Map(document.getElementById("map"), {
    zoom: 13,
    center: { lat: 37.775, lng: -122.434 },
    mapTypeId: "satellite",
  });
  heatmap = new google.maps.visualization.HeatmapLayer({
    data: getPoints(),
    map: map,
  });
  document
    .getElementById("toggle-heatmap")
    .addEventListener("click", toggleHeatmap);
  document
    .getElementById("change-gradient")
    .addEventListener("click", changeGradient);
  document
    .getElementById("change-opacity")
    .addEventListener("click", changeOpacity);
  document
    .getElementById("change-radius")
    .addEventListener("click", changeRadius);
}

function toggleHeatmap() {
  heatmap.setMap(heatmap.getMap() ? null : map);
}

function changeGradient() {
  const gradient = [
    "rgba(0, 255, 255, 0)",
    "rgba(0, 255, 255, 1)",
    "rgba(0, 191, 255, 1)",
    "rgba(0, 127, 255, 1)",
    "rgba(0, 63, 255, 1)",
    "rgba(0, 0, 255, 1)",
    "rgba(0, 0, 223, 1)",
    "rgba(0, 0, 191, 1)",
    "rgba(0, 0, 159, 1)",
    "rgba(0, 0, 127, 1)",
    "rgba(63, 0, 91, 1)",
    "rgba(127, 0, 63, 1)",
    "rgba(191, 0, 31, 1)",
    "rgba(255, 0, 0, 1)",
  ];

  heatmap.set("gradient", heatmap.get("gradient") ? null : gradient);
}

function changeRadius() {
  heatmap.set("radius", heatmap.get("radius") ? null : 20);
}

function changeOpacity() {
  heatmap.set("opacity", heatmap.get("opacity") ? null : 0.2);
}

// Heatmap data: 500 Points
function getPoints() {
 return fetch('markers.json')
    .then(response => response.json())
    .then(data => data.map(point => new google.maps.LatLng(point.lat, point.lng)))
    .catch(error => console.error(error));
    
}

window.initMap = initMap;
    </script>
  </head>
  <body>
    <div id="floating-panel">
      <button id="toggle-heatmap">Toggle Heatmap</button>
      <button id="change-gradient">Change gradient</button>
      <button id="change-radius">Change radius</button>
      <button id="change-opacity">Change opacity</button>
    </div>
    <div id="map"></div>

    <!-- 
      The `defer` attribute causes the callback to execute after the full HTML
      document has been parsed. For non-blocking uses, avoiding race conditions,
      and consistent behavior across browsers, consider loading using Promises.
      See https://developers.google.com/maps/documentation/javascript/load-maps-js-api
      for more information.
      -->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCeVRrGNNdgStU-d7vf3tuCh1abflLrOwc&callback=initMap&libraries=visualization&v=weekly"
      defer
    ></script>
  </body>
</html>